{"ast":null,"code":"var _jsxFileName = \"/home/wacademie/delivery/Semestre 2/Module Stack javascript/my_irc/client/src/components/chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport '../css/home.css';\nimport socket from './connect.js';\n\nfunction Chat() {\n  const [chatArray, setChatArray] = useState([]);\n  useEffect(() => {\n    socket.on('message', ({\n      name,\n      message,\n      type\n    }) => {\n      console.log(type);\n      setChatArray([...chatArray, {\n        name,\n        message,\n        type\n      }]);\n    });\n  });\n\n  const renderChat = () => {\n    return chatArray.map(({\n      name,\n      message,\n      type\n    }, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"send\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text_mess\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, \" \", message))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"titleChat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Chat My_Dispute\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, renderChat()));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/wacademie/delivery/Semestre 2/Module Stack javascript/my_irc/client/src/components/chat.js"],"names":["React","useState","useEffect","socket","Chat","chatArray","setChatArray","on","name","message","type","console","log","renderChat","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,sCAAP;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,IAAT,GAAe;AAEX,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,MAAM,CAACI,EAAP,CAAU,SAAV,EAAqB,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAD,KAA6B;AAChDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAe;AAAEG,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,OAAf,CAAD,CAAZ;AACD,KAHD;AAIH,GALQ,CAAT;;AAOA,QAAMG,UAAU,GAAG,MAAM;AACrB,WAAOR,SAAS,CAACS,GAAV,CAAc,CAAC;AAAEN,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAD,EAA0BK,KAA1B,kBACnB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,IADH,oBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADT,eAEE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA8BC,OAA9B,CAFF,CADF,CADK,CAAP;AAQD,GATH;;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,UAAU,EADf,CAFJ,CADJ;AAQH;;AAED,eAAeT,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport '../css/home.css'\nimport socket from './connect.js'\n\nfunction Chat(){\n\n    const [chatArray, setChatArray] = useState([])\n\n    useEffect(() => {\n        socket.on('message', ({ name, message, type }) => {\n          console.log(type)\n          setChatArray([...chatArray, { name, message, type }])\n        })\n    })\n\n    const renderChat = () => {\n        return chatArray.map(({ name, message, type }, index) => (\n          <div key={index}>\n            <h4 className=\"send\">\n              {name} <br></br>\n              <span className=\"text_mess\"> {message}</span>\n            </h4>\n          </div>\n        ))\n      }\n\n    return(\n        <div>\n            <h3 className=\"titleChat\">Chat My_Dispute</h3>\n            <div className=\"chat_size\">\n                {renderChat()}\n            </div>\n        </div>\n    )\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}