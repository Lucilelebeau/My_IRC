{"ast":null,"code":"var _jsxFileName = \"/home/my_irc/client/src/components/listRooms.js\";\nimport React, { useState } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form } from 'react-bootstrap';\nimport '../css/home.css';\nimport socket from './connect.js';\n\nfunction ListRooms() {\n  // Affiche List Room\n  const [listRooms, setListRooms] = useState([]);\n  socket.on('listRooms', listRooms => {\n    setListRooms(listRooms, listRooms);\n    console.log(\"liste complete : \" + listRooms);\n  }); // Room join\n\n  const [listRoomsUser, setListRoomsUser] = useState([]);\n  socket.on('listRoomsUser', listRoomsUser => {\n    setListRoomsUser(listRoomsUser, listRoomsUser);\n    console.log(\"liste du user : \" + listRoomsUser);\n  });\n\n  const onRoomJoin = room => {\n    console.log(room + \" : join\");\n    socket.emit('joinRoom', room);\n  }; // Room Leave\n\n\n  const onRoomLeave = room => {\n    console.log(room + \" : leave\");\n    socket.emit('leaveRoom', room);\n  }; // Room Edit\n\n\n  const onRoomEdit = room => {\n    console.log(room + \" : edit\");\n    socket.emit('editRoom', room);\n  }; // Delete Room if usercreate\n\n\n  const onRoomDelete = room => {\n    console.log(room + \" : delete\");\n    socket.emit('deleteRoom', room);\n  }; //<button className=\"buttons_edit\" type=\"submit\" onClick={()=>onRoomEdit(room)}>edit</button>\n  //<button className=\"buttons_delete\" type=\"submit\" onClick={()=>onRoomDelete(room)}>X</button>\n  // if le user à créé la liste\n\n\n  const renderListCreate = () => {\n    for (let element of listRoomsUser) {\n      if (element == 'General') {\n        return listRooms.map((room, index) => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"room_button\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"room\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }\n        }, room), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"buttons_join\",\n          type: \"submit\",\n          onClick: () => onRoomJoin(room),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        }, \"join\"), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"buttons_leave\",\n          type: \"submit\",\n          onClick: () => onRoomLeave(room),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }\n        }, \"leave\")));\n      } else {\n        return listRooms.map((room, index) => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"room_button\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"room\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }\n        }, room), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"buttons_join\",\n          type: \"submit\",\n          onClick: () => onRoomJoin(room),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }\n        }, \"join\"), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"buttons_leave\",\n          type: \"submit\",\n          onClick: () => onRoomLeave(room),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }\n        }, \"leave\"), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"buttons_edit\",\n          type: \"submit\",\n          onClick: () => onRoomEdit(room),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }\n        }, \"edit\"), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"buttons_delete\",\n          type: \"submit\",\n          onClick: () => onRoomDelete(room),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }\n        }, \"X\")));\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list_rooms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, renderListCreate());\n}\n\nexport default ListRooms;","map":{"version":3,"sources":["/home/my_irc/client/src/components/listRooms.js"],"names":["React","useState","Form","socket","ListRooms","listRooms","setListRooms","on","console","log","listRoomsUser","setListRoomsUser","onRoomJoin","room","emit","onRoomLeave","onRoomEdit","onRoomDelete","renderListCreate","element","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { Form } from 'react-bootstrap'\nimport '../css/home.css'\nimport socket from './connect.js'\n\nfunction ListRooms(){\n\n    // Affiche List Room\n    const [listRooms, setListRooms] = useState([])\n    socket.on('listRooms', listRooms => {\n      setListRooms(listRooms, listRooms)\n      console.log(\"liste complete : \" + listRooms)\n    })\n\n    // Room join\n    const [listRoomsUser, setListRoomsUser] = useState([])\n    socket.on('listRoomsUser', listRoomsUser => {\n      setListRoomsUser(listRoomsUser, listRoomsUser)\n      console.log(\"liste du user : \" + listRoomsUser)\n      \n      \n    })\n    const onRoomJoin = room => {\n      console.log(room + \" : join\")\n      socket.emit('joinRoom', room)\n    }\n\n    // Room Leave\n    const onRoomLeave = room => {\n      console.log(room + \" : leave\")\n      socket.emit('leaveRoom', room)\n    }\n\n    // Room Edit\n    const onRoomEdit = room => {\n      console.log(room + \" : edit\")\n      socket.emit('editRoom', room)\n    }\n\n    // Delete Room if usercreate\n    const onRoomDelete = room => {\n      console.log(room + \" : delete\")\n      socket.emit('deleteRoom', room)\n    }\n\n    //<button className=\"buttons_edit\" type=\"submit\" onClick={()=>onRoomEdit(room)}>edit</button>\n    //<button className=\"buttons_delete\" type=\"submit\" onClick={()=>onRoomDelete(room)}>X</button>\n\n    // if le user à créé la liste\n    const renderListCreate = () => {\n      \n      for (let element of listRoomsUser){\n        if(element == 'General'){\n          return listRooms.map((room, index) => (\n            <div className=\"room_button\" key={index}>\n              <h4 className=\"room\">\n                {room}\n              </h4>\n              <button className=\"buttons_join\" type=\"submit\" onClick={()=>onRoomJoin(room)}>join</button>\n              <button className=\"buttons_leave\" type=\"submit\" onClick={()=>onRoomLeave(room)}>leave</button>\n            </div>\n          ))\n        }\n        else{\n          return listRooms.map((room, index) => (\n            <div className=\"room_button\" key={index}>\n              <h4 className=\"room\">\n                {room}\n              </h4>\n              <button className=\"buttons_join\" type=\"submit\" onClick={()=>onRoomJoin(room)}>join</button>\n              <button className=\"buttons_leave\" type=\"submit\" onClick={()=>onRoomLeave(room)}>leave</button>\n              <button className=\"buttons_edit\" type=\"submit\" onClick={()=>onRoomEdit(room)}>edit</button>\n              <button className=\"buttons_delete\" type=\"submit\" onClick={()=>onRoomDelete(room)}>X</button>\n            </div>\n          ))\n        }\n      }\n    }\n\n    return(\n        <div className=\"list_rooms\">\n            {renderListCreate()}\n        </div>\n    )\n}\n\nexport default ListRooms"]},"metadata":{},"sourceType":"module"}