{"ast":null,"code":"var _jsxFileName = \"/home/my_irc/client/src/components/home.js\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Navbar from '../components/navbar.js';\nimport '../css/home.css';\nimport io from 'socket.io-client';\nconst socket = io.connect('http://localhost:4000');\nsocket.emit('newUser');\n\nfunction Home() {\n  //déclaration des states \n  const [mess, setMess] = useState({\n    message: '',\n    name: ''\n  });\n  const [chat, setChat] = useState([]);\n  const [all, setAll] = useState({\n    listAll: ''\n  }); //déclenché en écrivant, met à jour les valeurs messages\n\n  const onTextChange = e => {\n    setMess({ ...mess,\n      [e.target.name]: e.target.value\n    });\n  }; //déclenché par le form, envoi les infos messages au serveur\n\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      message\n    } = mess;\n    socket.emit('message', {\n      name,\n      message\n    });\n    setMess({\n      message: '',\n      name\n    });\n  }; //déclenchement auto, récup évènement messages\n\n\n  useEffect(() => {\n    socket.on('message', ({\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n  }); //fin du render chat\n\n  const renderChat = () => {\n    return chat.map(({\n      name,\n      message\n    }, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, name, \" : \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }\n    }, message))));\n  }; //fin du render All\n\n\n  const renderAll = () => {\n    socket.on('all', {\n      cleints\n    });\n    /*return all.map(({ listAll }, index) => (\n      <div key={index}>\n        <h3>\n          {listAll}\n        </h3>\n      </div>\n    ))*/\n  }; //render\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onMessageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Messanger\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"name\",\n    onChange: e => onTextChange(e),\n    value: mess.name,\n    label: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    onChange: e => onTextChange(e),\n    value: mess.message,\n    id: \"outlined-multiline-static\",\n    variant: \"outlined\",\n    label: \"Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Send Message\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"render-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Chat Log\"), renderChat()), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"List connected\"), renderAll()))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/my_irc/client/src/components/home.js"],"names":["React","useState","useEffect","TextField","Container","Navbar","io","socket","connect","emit","Home","mess","setMess","message","name","chat","setChat","all","setAll","listAll","onTextChange","e","target","value","onMessageSubmit","preventDefault","on","renderChat","map","index","renderAll","cleints"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAO,iBAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAW,uBAAX,CAAf;AAEAD,MAAM,CAACE,IAAP,CAAY,SAAZ;;AAEA,SAASC,IAAT,GAAgB;AAEd;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAAEY,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAAD,CAAhC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC;AAACkB,IAAAA,OAAO,EAAE;AAAV,GAAD,CAA9B,CALc,CAOd;;AACA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBT,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACU,CAAC,CAACC,MAAF,CAASR,IAAV,GAAiBO,CAAC,CAACC,MAAF,CAASC;AAArC,KAAD,CAAP;AACD,GAFD,CARc,CAYd;;;AACA,QAAMC,eAAe,GAAGH,CAAC,IAAI;AAC3BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAM;AAAEX,MAAAA,IAAF;AAAQD,MAAAA;AAAR,QAAoBF,IAA1B;AACAJ,IAAAA,MAAM,CAACE,IAAP,CAAY,SAAZ,EAAuB;AAAEK,MAAAA,IAAF;AAAQD,MAAAA;AAAR,KAAvB;AACAD,IAAAA,OAAO,CAAC;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA;AAAf,KAAD,CAAP;AACD,GALD,CAbc,CAoBd;;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACmB,EAAP,CAAU,SAAV,EAAqB,CAAC;AAAEZ,MAAAA,IAAF;AAAQD,MAAAA;AAAR,KAAD,KAAuB;AAC1CG,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU;AAAED,QAAAA,IAAF;AAAQD,QAAAA;AAAR,OAAV,CAAD,CAAP;AACD,KAFD;AAGD,GAJQ,CAAT,CArBc,CA2Bd;;AACA,QAAMc,UAAU,GAAG,MAAM;AACvB,WAAOZ,IAAI,CAACa,GAAL,CAAS,CAAC;AAAEd,MAAAA,IAAF;AAAQD,MAAAA;AAAR,KAAD,EAAoBgB,KAApB,kBACd;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,IADH,sBACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,OAAP,CADX,CADF,CADK,CAAP;AAOD,GARD,CA5Bc,CAsCd;;;AACA,QAAMiB,SAAS,GAAG,MAAM;AACtBvB,IAAAA,MAAM,CAACmB,EAAP,CAAU,KAAV,EAAkB;AAACK,MAAAA;AAAD,KAAlB;AACA;;;;;;;AAOD,GATD,CAvCc,CAoDd;;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEP,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAEH,CAAC,IAAID,YAAY,CAACC,CAAD,CAF7B;AAGE,IAAA,KAAK,EAAEV,IAAI,CAACG,IAHd;AAIE,IAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,QAAQ,EAAEO,CAAC,IAAID,YAAY,CAACC,CAAD,CAF7B;AAGE,IAAA,KAAK,EAAEV,IAAI,CAACE,OAHd;AAIE,IAAA,EAAE,EAAC,2BAJL;AAKE,IAAA,OAAO,EAAC,UALV;AAME,IAAA,KAAK,EAAC,SANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBF,CADF,eAuBE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGc,UAAU,EAFb,CAvBF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGG,SAAS,EAFZ,CA3BF,CADA,CAFA,CADF;AAuCD;;AAED,eAAepB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Container from '@material-ui/core/Container'\nimport Navbar from '../components/navbar.js'\nimport '../css/home.css'\nimport io from 'socket.io-client'\n\nconst socket = io.connect('http://localhost:4000')\n\nsocket.emit('newUser')\n\nfunction Home() {\n\n  //déclaration des states \n  const [mess, setMess] = useState({ message: '', name: '' })\n  const [chat, setChat] = useState([])\n  const [all, setAll] = useState({listAll: ''})\n\n  //déclenché en écrivant, met à jour les valeurs messages\n  const onTextChange = e => {\n    setMess({ ...mess, [e.target.name]: e.target.value })\n  }\n\n  //déclenché par le form, envoi les infos messages au serveur\n  const onMessageSubmit = e => {\n    e.preventDefault()\n    const { name, message } = mess\n    socket.emit('message', { name, message })\n    setMess({ message: '', name })\n  }\n\n  //déclenchement auto, récup évènement messages\n  useEffect(() => {\n    socket.on('message', ({ name, message }) => {\n      setChat([...chat, { name, message }])\n    })\n  })\n\n  //fin du render chat\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3>\n          {name} : <span>{message}</span>\n        </h3>\n      </div>\n    ))\n  }\n\n  //fin du render All\n  const renderAll = () => {\n    socket.on('all', ({cleints}))\n    /*return all.map(({ listAll }, index) => (\n      <div key={index}>\n        <h3>\n          {listAll}\n        </h3>\n      </div>\n    ))*/\n  }\n\n  \n\n  //render\n  return (\n    <div>\n    <Navbar/>\n    <Container>\n    <div className=\"card\">\n      <form onSubmit={onMessageSubmit}>\n        <h1>Messanger</h1>\n        <div className=\"name-field\">\n          <TextField\n            name=\"name\"\n            onChange={e => onTextChange(e)}\n            value={mess.name}\n            label=\"Name\"\n          />\n        </div>\n        <div>\n          <TextField\n            name=\"message\"\n            onChange={e => onTextChange(e)}\n            value={mess.message}\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Message\"\n          />\n        </div>\n        <button>Send Message</button>\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n      <div>\n        <h1>List connected</h1>\n        {renderAll()}\n      </div>\n    </div>\n    </Container>\n    </div>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}