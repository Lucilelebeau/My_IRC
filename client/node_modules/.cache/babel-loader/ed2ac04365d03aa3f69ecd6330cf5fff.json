{"ast":null,"code":"var _jsxFileName = \"/home/my_irc/client/src/components/listRooms.js\";\nimport React, { useState } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form } from 'react-bootstrap';\nimport '../css/home.css';\nimport socket from './connect.js';\n\nfunction ListRooms() {\n  // Affiche List Room\n  const [listRooms, setListRooms] = useState([]);\n  socket.on('listRooms', listRooms => {\n    //console.log(listRooms)\n    setListRooms(listRooms, listRooms);\n  }); // Room join if room\n\n  const [listRoomsUser, setListRoomsUser] = useState([]);\n  socket.on('listRoomsUser', listRoomsUser => {\n    setListRoomsUser(listRoomsUser, listRoomsUser);\n    console.log(\"user Rooms :\");\n    console.log(listRoomsUser);\n  });\n\n  const onRoomJoin = (e, room) => {\n    e.preventDefault(); //if(room != listRooms)\n    //socket.emit('joinRoom', room)\n  }; // Room Leave\n\n\n  const onRoomLeave = (e, room) => {\n    e.preventDefault();\n    socket.emit('leaveRoom', room);\n  }; // Delete Room if usercreate\n\n\n  const onRoomDelete = (e, room) => {\n    e.preventDefault();\n    socket.emit('deleteRoom', room);\n  }; // if le user à créé la liste\n\n\n  const renderListCreate = () => {\n    return listRooms.map((room, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"room_button\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"room\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, room), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"buttons_join\",\n      type: \"submit\",\n      onSubmit: onRoomJoin(room),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"join\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"buttons_leave\",\n      type: \"submit\",\n      onSubmit: onRoomLeave(room),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"leave\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"buttons_delete\",\n      type: \"submit\",\n      onSubmit: onRoomDelete(room),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"X\")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list_rooms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, renderListCreate());\n}\n\nexport default ListRooms;","map":{"version":3,"sources":["/home/my_irc/client/src/components/listRooms.js"],"names":["React","useState","Form","socket","ListRooms","listRooms","setListRooms","on","listRoomsUser","setListRoomsUser","console","log","onRoomJoin","e","room","preventDefault","onRoomLeave","emit","onRoomDelete","renderListCreate","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,sCAAP;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,SAAT,GAAoB;AAEhB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACAE,EAAAA,MAAM,CAACI,EAAP,CAAU,WAAV,EAAuBF,SAAS,IAAI;AAClC;AACAC,IAAAA,YAAY,CAACD,SAAD,EAAYA,SAAZ,CAAZ;AACD,GAHD,EAJgB,CAShB;;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACAE,EAAAA,MAAM,CAACI,EAAP,CAAU,eAAV,EAA2BC,aAAa,IAAI;AAC1CC,IAAAA,gBAAgB,CAACD,aAAD,EAAgBA,aAAhB,CAAhB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACD,GAJD;;AAKA,QAAMI,UAAU,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAC9BD,IAAAA,CAAC,CAACE,cAAF,GAD8B,CAE9B;AACA;AACD,GAJD,CAhBgB,CAsBhB;;;AACA,QAAMC,WAAW,GAAG,CAACH,CAAD,EAAIC,IAAJ,KAAa;AAC/BD,IAAAA,CAAC,CAACE,cAAF;AACAZ,IAAAA,MAAM,CAACc,IAAP,CAAY,WAAZ,EAAyBH,IAAzB;AACD,GAHD,CAvBgB,CA4BhB;;;AACA,QAAMI,YAAY,GAAG,CAACL,CAAD,EAAIC,IAAJ,KAAa;AAChCD,IAAAA,CAAC,CAACE,cAAF;AACAZ,IAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ,EAA0BH,IAA1B;AACD,GAHD,CA7BgB,CAkChB;;;AACA,QAAMK,gBAAgB,GAAG,MAAM;AAC3B,WAAOd,SAAS,CAACe,GAAV,CAAc,CAACN,IAAD,EAAOO,KAAP,kBACnB;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAEA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,IADH,CADF,eAIE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAA+C,MAAA,QAAQ,EAAEF,UAAU,CAACE,IAAD,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,IAAI,EAAC,QAAvC;AAAgD,MAAA,QAAQ,EAAEE,WAAW,CAACF,IAAD,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,IAAI,EAAC,QAAxC;AAAiD,MAAA,QAAQ,EAAEI,YAAY,CAACJ,IAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,CADK,CAAP;AAUH,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,gBAAgB,EADrB,CADJ;AAKH;;AAED,eAAef,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { Form } from 'react-bootstrap'\nimport '../css/home.css'\nimport socket from './connect.js'\n\nfunction ListRooms(){\n\n    // Affiche List Room\n    const [listRooms, setListRooms] = useState([])\n    socket.on('listRooms', listRooms => {\n      //console.log(listRooms)\n      setListRooms(listRooms, listRooms)\n    })\n\n    // Room join if room\n    const [listRoomsUser, setListRoomsUser] = useState([])\n    socket.on('listRoomsUser', listRoomsUser => {\n      setListRoomsUser(listRoomsUser, listRoomsUser)\n      console.log(\"user Rooms :\")\n      console.log(listRoomsUser)\n    })\n    const onRoomJoin = (e, room) => {\n      e.preventDefault()\n      //if(room != listRooms)\n      //socket.emit('joinRoom', room)\n    }\n\n    // Room Leave\n    const onRoomLeave = (e, room) => {\n      e.preventDefault()\n      socket.emit('leaveRoom', room)\n    }\n\n    // Delete Room if usercreate\n    const onRoomDelete = (e, room) => {\n      e.preventDefault()\n      socket.emit('deleteRoom', room)\n    }\n\n    // if le user à créé la liste\n    const renderListCreate = () => {\n        return listRooms.map((room, index) => (\n          <div className=\"room_button\" key={index}>\n            <h4 className=\"room\">\n              {room}\n            </h4>\n            <button className=\"buttons_join\" type=\"submit\" onSubmit={onRoomJoin(room)}>join</button>\n            <button className=\"buttons_leave\" type=\"submit\" onSubmit={onRoomLeave(room)}>leave</button>\n            <button className=\"buttons_delete\" type=\"submit\" onSubmit={onRoomDelete(room)}>X</button>\n          </div>\n        ))\n    }\n\n    return(\n        <div className=\"list_rooms\">\n            {renderListCreate()}\n        </div>\n    )\n}\n\nexport default ListRooms"]},"metadata":{},"sourceType":"module"}