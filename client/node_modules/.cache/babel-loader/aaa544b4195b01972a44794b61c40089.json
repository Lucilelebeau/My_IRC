{"ast":null,"code":"var _jsxFileName = \"/home/wacademie/delivery/Semestre 2/Module Stack javascript/my_irc/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\nconst socket = io.connect('http://localhost:4000');\n\nfunction App() {\n  const [chat, setChat] = useState([]);\n  const [user, setUser] = useState('');\n  const [mess, setMess] = useState('');\n  useEffect(() => {\n    socket.on('message', ({\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n  });\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      message\n    } = mess;\n    socket.emit('message', {\n      name,\n      message\n    });\n    setMess({\n      message: '',\n      name\n    });\n    setMess('');\n    setUser(name);\n  };\n\n  const renderChat = () => {\n    return chat.map(({\n      name,\n      message\n    }, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, name, \": \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, message))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onMessageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Messanger\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"name\",\n    onChange: e => setMess(e.target.value),\n    value: user.name,\n    label: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    onChange: e => setMess(e.target.value),\n    value: mess.message,\n    id: \"outlined-multiline-static\",\n    variant: \"outlined\",\n    label: \"Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Send Message\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"render-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Chat Log\"), renderChat()));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/wacademie/delivery/Semestre 2/Module Stack javascript/my_irc/client/src/App.js"],"names":["React","useState","useEffect","io","TextField","socket","connect","App","chat","setChat","user","setUser","mess","setMess","on","name","message","onMessageSubmit","e","preventDefault","emit","renderChat","map","index","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport io from 'socket.io-client'\nimport TextField from '@material-ui/core/TextField'\nimport './App.css'\n\nconst socket = io.connect('http://localhost:4000')\n\nfunction App() {\n  const [chat, setChat] = useState([])\n  \n\n  const [user, setUser] = useState('')\n  const [mess, setMess] = useState('')\n\n  useEffect(() => {\n    socket.on('message', ({ name, message }) => {\n      setChat([...chat, { name, message }])\n    })\n  })\n\n  const onMessageSubmit = e => {\n    e.preventDefault()\n    const { name, message } = mess\n    socket.emit('message', { name, message })\n    setMess({ message: '', name })\n\n    setMess('')\n    setUser(name)\n  }\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3>\n          {name}: <span>{message}</span>\n        </h3>\n      </div>\n    ))\n  }\n\n  return (\n    <div className=\"card\">\n      <form onSubmit={onMessageSubmit}>\n        <h1>Messanger</h1>\n        <div className=\"name-field\">\n          <TextField\n            name=\"name\"\n            onChange={e => setMess(e.target.value)\n          }\n            value={user.name}\n            label=\"Name\"\n          />\n        </div>\n        <div>\n          <TextField\n            name=\"message\"\n            onChange={e => setMess(e.target.value)}\n            value={mess.message}\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Message\"\n          />\n        </div>\n        <button>Send Message</button>\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}