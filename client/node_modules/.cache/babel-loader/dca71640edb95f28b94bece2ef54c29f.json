{"ast":null,"code":"var _jsxFileName = \"/home/wacademie/delivery/Semestre 2/Module Stack javascript/my_irc/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\nconst socket = io.connect('http://localhost:4000');\n\nfunction App() {\n  const [messa, setMessa] = useState({\n    message: '',\n    name: ''\n  });\n  const [chat, setChat] = useState([]);\n  const [user, setUser] = useState('');\n  const [mess, setMess] = useState('');\n  useEffect(() => {\n    socket.on('message', ({\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n  });\n\n  const onTextChange = e => {\n    console.log(e);\n    setMessa({ ...messa,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      message\n    } = messa;\n    socket.emit('message', {\n      name,\n      message\n    });\n    setMessa({\n      message: '',\n      name\n    });\n  };\n\n  const renderChat = () => {\n    return chat.map(({\n      name,\n      message\n    }, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, name, \": \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }\n    }, message))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onMessageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Messanger\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"name\",\n    onChange: e => setMessa({ ...messa,\n      [e.target.name]: e.target.value\n    }),\n    value: messa.name,\n    label: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    onChange: e => setMessa({ ...messa,\n      [e.target.name]: e.target.value\n    }),\n    value: messa.message,\n    id: \"outlined-multiline-static\",\n    variant: \"outlined\",\n    label: \"Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Send Message\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"render-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Chat Log\"), renderChat()));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/wacademie/delivery/Semestre 2/Module Stack javascript/my_irc/client/src/App.js"],"names":["React","useState","useEffect","io","TextField","socket","connect","App","messa","setMessa","message","name","chat","setChat","user","setUser","mess","setMess","on","onTextChange","e","console","log","target","value","onMessageSubmit","preventDefault","emit","renderChat","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport io from 'socket.io-client'\nimport TextField from '@material-ui/core/TextField'\nimport './App.css'\n\nconst socket = io.connect('http://localhost:4000')\n\nfunction App() {\n  const [messa, setMessa] = useState({ message: '', name: '' })\n  const [chat, setChat] = useState([])\n\n  const [user, setUser] = useState('')\n  const [mess, setMess] = useState('')\n\n  useEffect(() => {\n    socket.on('message', ({ name, message }) => {\n      setChat([...chat, { name, message }])\n    })\n  })\n\n  const onTextChange = e => {\n    console.log(e)\n    setMessa({ ...messa, [e.target.name]: e.target.value })\n  }\n\n  const onMessageSubmit = e => {\n    e.preventDefault()\n    const { name, message } = messa\n    socket.emit('message', { name, message })\n    setMessa({ message: '', name })\n  }\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3>\n          {name}: <span>{message}</span>\n        </h3>\n      </div>\n    ))\n  }\n\n  return (\n    <div className=\"card\">\n      <form onSubmit={onMessageSubmit}>\n        <h1>Messanger</h1>\n        <div className=\"name-field\">\n          <TextField\n            name=\"name\"\n            onChange={e => setMessa({ ...messa, [e.target.name]: e.target.value })\n          }\n            value={messa.name}\n            label=\"Name\"\n          />\n        </div>\n        <div>\n          <TextField\n            name=\"message\"\n            onChange={e => setMessa({ ...messa, [e.target.name]: e.target.value })}\n            value={messa.message}\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Message\"\n          />\n        </div>\n        <button>Send Message</button>\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}